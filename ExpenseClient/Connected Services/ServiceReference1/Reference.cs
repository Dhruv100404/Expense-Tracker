//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExpenseClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Expense", Namespace="http://schemas.datacontract.org/2004/07/ExpenseService")]
    [System.SerializableAttribute()]
    public partial class Expense : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpenseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpenseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpenseDate {
            get {
                return this.ExpenseDateField;
            }
            set {
                if ((this.ExpenseDateField.Equals(value) != true)) {
                    this.ExpenseDateField = value;
                    this.RaisePropertyChanged("ExpenseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpenseId {
            get {
                return this.ExpenseIdField;
            }
            set {
                if ((this.ExpenseIdField.Equals(value) != true)) {
                    this.ExpenseIdField = value;
                    this.RaisePropertyChanged("ExpenseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseName {
            get {
                return this.ExpenseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseNameField, value) != true)) {
                    this.ExpenseNameField = value;
                    this.RaisePropertyChanged("ExpenseName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddExpense", ReplyAction="http://tempuri.org/IService1/AddExpenseResponse")]
        void AddExpense(ExpenseClient.ServiceReference1.Expense expense);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddExpense", ReplyAction="http://tempuri.org/IService1/AddExpenseResponse")]
        System.Threading.Tasks.Task AddExpenseAsync(ExpenseClient.ServiceReference1.Expense expense);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetExpenses", ReplyAction="http://tempuri.org/IService1/GetExpensesResponse")]
        ExpenseClient.ServiceReference1.Expense[] GetExpenses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetExpenses", ReplyAction="http://tempuri.org/IService1/GetExpensesResponse")]
        System.Threading.Tasks.Task<ExpenseClient.ServiceReference1.Expense[]> GetExpensesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateExpense", ReplyAction="http://tempuri.org/IService1/UpdateExpenseResponse")]
        void UpdateExpense(ExpenseClient.ServiceReference1.Expense expense);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateExpense", ReplyAction="http://tempuri.org/IService1/UpdateExpenseResponse")]
        System.Threading.Tasks.Task UpdateExpenseAsync(ExpenseClient.ServiceReference1.Expense expense);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteExpense", ReplyAction="http://tempuri.org/IService1/DeleteExpenseResponse")]
        void DeleteExpense(int ExpenseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteExpense", ReplyAction="http://tempuri.org/IService1/DeleteExpenseResponse")]
        System.Threading.Tasks.Task DeleteExpenseAsync(int ExpenseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCategories", ReplyAction="http://tempuri.org/IService1/GetCategoriesResponse")]
        System.Data.DataSet GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCategories", ReplyAction="http://tempuri.org/IService1/GetCategoriesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCategoriesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ExpenseClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ExpenseClient.ServiceReference1.IService1>, ExpenseClient.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddExpense(ExpenseClient.ServiceReference1.Expense expense) {
            base.Channel.AddExpense(expense);
        }
        
        public System.Threading.Tasks.Task AddExpenseAsync(ExpenseClient.ServiceReference1.Expense expense) {
            return base.Channel.AddExpenseAsync(expense);
        }
        
        public ExpenseClient.ServiceReference1.Expense[] GetExpenses() {
            return base.Channel.GetExpenses();
        }
        
        public System.Threading.Tasks.Task<ExpenseClient.ServiceReference1.Expense[]> GetExpensesAsync() {
            return base.Channel.GetExpensesAsync();
        }
        
        public void UpdateExpense(ExpenseClient.ServiceReference1.Expense expense) {
            base.Channel.UpdateExpense(expense);
        }
        
        public System.Threading.Tasks.Task UpdateExpenseAsync(ExpenseClient.ServiceReference1.Expense expense) {
            return base.Channel.UpdateExpenseAsync(expense);
        }
        
        public void DeleteExpense(int ExpenseId) {
            base.Channel.DeleteExpense(ExpenseId);
        }
        
        public System.Threading.Tasks.Task DeleteExpenseAsync(int ExpenseId) {
            return base.Channel.DeleteExpenseAsync(ExpenseId);
        }
        
        public System.Data.DataSet GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
    }
}
